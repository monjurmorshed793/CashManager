entity Item{
	name String,
    description TextBlob,
    createdBy String,
    createdOn Instant,
    modifiedBy String,
    modifiedOn Instant
}

entity PayTo{
	name String,
    description TextBlob,
    createdBy String,
    createdOn Instant,
    modifiedBy String,
    modifiedOn Instant
}

entity Deposit{
	loginId String required,
    depositNo Integer unique,
    depositBy String required,
    depositDate LocalDate required,
    medium DepositMedium required,
    amount BigDecimal required,
    note TextBlob required,
    isPosted Boolean,
    postDate Instant,
    createdBy String,
    createdOn Instant,
    modifiedBy String,
    modifiedOn Instant
}

entity Expanse{
	loginId String required,
    voucherNo Integer unique,
    voucherDate LocalDate required,
    month MonthType required,
    notes TextBlob required,
    isPosted Boolean,
    postDate Instant,
    createdBy String,
    createdOn Instant,
    modifiedBy String,
    modifiedOn Instant
}

@skipClient
entity ExpanseSeq{

}
@skipClient
entity DepositSeq{

}

entity ExpanseDtl{
	//item
    quantity BigDecimal required,
    unitPrice BigDecimal required,
    amount BigDecimal required,
    createdBy String,
    createdOn Instant,
    modifiedBy String,
    modifiedOn Instant
}


enum DepositMedium{
	ATM,
    BANK,
    CASH
}

enum MonthType{
  JANUARY,
  FEBRUARY,
  MARCH,
  APRIL,
  MAY,
  JUNE,
  JULY,
  AUGUST,
  SEPTEMBER,
  OCTOBER,
  NOVEMBER,
  DECEMBER
}

relationship ManyToOne {
	ExpanseDtl{expanse(voucherNo)} to Expanse,
    ExpanseDtl{item(name) required} to Item,
    Expanse{payTo(name) required} to PayTo
}

dto all with mapstruct
filter *
paginate Item, PayTo, Deposit, Expanse, ExpanseDtl with pagination
service Item, PayTo, Deposit, Expanse, ExpanseDtl with serviceClass
